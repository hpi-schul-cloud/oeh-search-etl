# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from edu_sharing_client.models.node_relation import NodeRelation

class TestNodeRelation(unittest.TestCase):
    """NodeRelation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NodeRelation:
        """Test NodeRelation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NodeRelation`
        """
        model = NodeRelation()
        if include_optional:
            return NodeRelation(
                node = edu_sharing_client.models.node.Node(
                    node_lti_deep_link = edu_sharing_client.models.node_lti_deep_link.NodeLTIDeepLink(
                        lti_deep_link_return_url = '', 
                        jwt_deep_link_response = '', ), 
                    remote = edu_sharing_client.models.remote.Remote(
                        repository = edu_sharing_client.models.repo.Repo(
                            repository_type = '', 
                            rendering_supported = True, 
                            id = '', 
                            title = '', 
                            icon = '', 
                            logo = '', 
                            is_home_repo = True, ), 
                        id = '', ), 
                    content = edu_sharing_client.models.content.Content(
                        url = '', 
                        hash = '', 
                        version = '', ), 
                    license = edu_sharing_client.models.license.License(
                        icon = '', 
                        url = '', ), 
                    is_directory = True, 
                    comment_count = 56, 
                    rating = edu_sharing_client.models.rating_details.RatingDetails(
                        overall = edu_sharing_client.models.rating_data.RatingData(
                            sum = 1.337, 
                            count = 56, ), 
                        affiliation = {
                            'key' : edu_sharing_client.models.rating_data.RatingData(
                                sum = 1.337, 
                                count = 56, )
                            }, 
                        user = 1.337, ), 
                    used_in_collections = [
                        edu_sharing_client.models.node.Node(
                            is_directory = True, 
                            comment_count = 56, 
                            relations = {
                                'key' : 
                                }, 
                            contributors = [
                                edu_sharing_client.models.contributor.Contributor(
                                    property = '', 
                                    firstname = '', 
                                    lastname = '', 
                                    email = '', 
                                    vcard = '', 
                                    org = '', )
                                ], 
                            ref = edu_sharing_client.models.node_ref.NodeRef(
                                repo = '', 
                                id = '', 
                                archived = True, 
                                is_home_repo = True, ), 
                            parent = edu_sharing_client.models.node_ref.NodeRef(
                                repo = '', 
                                id = '', 
                                archived = True, 
                                is_home_repo = True, ), 
                            type = '', 
                            aspects = [
                                ''
                                ], 
                            name = '', 
                            title = '', 
                            metadataset = '', 
                            repository_type = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            created_by = edu_sharing_client.models.person.Person(
                                profile = edu_sharing_client.models.user_profile.UserProfile(
                                    primary_affiliation = '', 
                                    skills = [
                                        ''
                                        ], 
                                    types = [
                                        ''
                                        ], 
                                    vcard = '', 
                                    type = [
                                        ''
                                        ], 
                                    first_name = '', 
                                    last_name = '', 
                                    email = '', 
                                    avatar = '', 
                                    about = '', ), 
                                first_name = '', 
                                last_name = '', 
                                mailbox = '', ), 
                            modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            modified_by = edu_sharing_client.models.person.Person(
                                first_name = '', 
                                last_name = '', 
                                mailbox = '', ), 
                            access = [
                                ''
                                ], 
                            download_url = '', 
                            properties = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            mimetype = '', 
                            mediatype = '', 
                            size = '', 
                            preview = edu_sharing_client.models.preview.Preview(
                                is_icon = True, 
                                is_generated = True, 
                                mimetype = '', 
                                data = 'YQ==', 
                                url = '', 
                                width = 56, 
                                height = 56, ), 
                            icon_url = '', 
                            collection = edu_sharing_client.models.collection.Collection(
                                scope = '', 
                                author_freetext = '', 
                                order_ascending = True, 
                                level0 = True, 
                                title = '', 
                                description = '', 
                                type = '', 
                                viewtype = '', 
                                order_mode = '', 
                                x = 56, 
                                y = 56, 
                                z = 56, 
                                color = '', 
                                from_user = True, 
                                pinned = True, 
                                child_collections_count = 56, 
                                child_references_count = 56, ), 
                            owner = , 
                            is_public = True, )
                        ], 
                    relations = {
                        'key' : 
                        }, 
                    contributors = [
                        edu_sharing_client.models.contributor.Contributor(
                            property = '', 
                            firstname = '', 
                            lastname = '', 
                            email = '', 
                            vcard = '', 
                            org = '', )
                        ], 
                    ref = , 
                    parent = , 
                    type = '', 
                    aspects = [
                        ''
                        ], 
                    name = '', 
                    title = '', 
                    metadataset = '', 
                    repository_type = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = , 
                    modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    modified_by = , 
                    access = [
                        ''
                        ], 
                    download_url = '', 
                    properties = {
                        'key' : [
                            ''
                            ]
                        }, 
                    mimetype = '', 
                    mediatype = '', 
                    size = '', 
                    preview = edu_sharing_client.models.preview.Preview(
                        is_icon = True, 
                        is_generated = True, 
                        mimetype = '', 
                        data = 'YQ==', 
                        url = '', 
                        width = 56, 
                        height = 56, ), 
                    icon_url = '', 
                    collection = edu_sharing_client.models.collection.Collection(
                        scope = '', 
                        author_freetext = '', 
                        order_ascending = True, 
                        level0 = True, 
                        title = '', 
                        description = '', 
                        type = '', 
                        viewtype = '', 
                        order_mode = '', 
                        x = 56, 
                        y = 56, 
                        z = 56, 
                        color = '', 
                        from_user = True, 
                        pinned = True, 
                        child_collections_count = 56, 
                        child_references_count = 56, ), 
                    owner = , 
                    is_public = True, ),
                relations = [
                    edu_sharing_client.models.relation_data.RelationData(
                        node = edu_sharing_client.models.node.Node(
                            node_lti_deep_link = edu_sharing_client.models.node_lti_deep_link.NodeLTIDeepLink(
                                lti_deep_link_return_url = '', 
                                jwt_deep_link_response = '', ), 
                            remote = edu_sharing_client.models.remote.Remote(
                                repository = edu_sharing_client.models.repo.Repo(
                                    repository_type = '', 
                                    rendering_supported = True, 
                                    id = '', 
                                    title = '', 
                                    icon = '', 
                                    logo = '', 
                                    is_home_repo = True, ), 
                                id = '', ), 
                            content = edu_sharing_client.models.content.Content(
                                url = '', 
                                hash = '', 
                                version = '', ), 
                            license = edu_sharing_client.models.license.License(
                                icon = '', 
                                url = '', ), 
                            is_directory = True, 
                            comment_count = 56, 
                            rating = edu_sharing_client.models.rating_details.RatingDetails(
                                overall = edu_sharing_client.models.rating_data.RatingData(
                                    sum = 1.337, 
                                    count = 56, ), 
                                affiliation = {
                                    'key' : edu_sharing_client.models.rating_data.RatingData(
                                        sum = 1.337, 
                                        count = 56, )
                                    }, 
                                user = 1.337, ), 
                            used_in_collections = [
                                edu_sharing_client.models.node.Node(
                                    is_directory = True, 
                                    comment_count = 56, 
                                    relations = {
                                        'key' : 
                                        }, 
                                    contributors = [
                                        edu_sharing_client.models.contributor.Contributor(
                                            property = '', 
                                            firstname = '', 
                                            lastname = '', 
                                            email = '', 
                                            vcard = '', 
                                            org = '', )
                                        ], 
                                    ref = edu_sharing_client.models.node_ref.NodeRef(
                                        repo = '', 
                                        id = '', 
                                        archived = True, 
                                        is_home_repo = True, ), 
                                    parent = edu_sharing_client.models.node_ref.NodeRef(
                                        repo = '', 
                                        id = '', 
                                        archived = True, 
                                        is_home_repo = True, ), 
                                    type = '', 
                                    aspects = [
                                        ''
                                        ], 
                                    name = '', 
                                    title = '', 
                                    metadataset = '', 
                                    repository_type = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    created_by = edu_sharing_client.models.person.Person(
                                        profile = edu_sharing_client.models.user_profile.UserProfile(
                                            primary_affiliation = '', 
                                            skills = [
                                                ''
                                                ], 
                                            types = [
                                                ''
                                                ], 
                                            vcard = '', 
                                            type = [
                                                ''
                                                ], 
                                            first_name = '', 
                                            last_name = '', 
                                            email = '', 
                                            avatar = '', 
                                            about = '', ), 
                                        first_name = '', 
                                        last_name = '', 
                                        mailbox = '', ), 
                                    modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    modified_by = edu_sharing_client.models.person.Person(
                                        first_name = '', 
                                        last_name = '', 
                                        mailbox = '', ), 
                                    access = [
                                        ''
                                        ], 
                                    download_url = '', 
                                    properties = {
                                        'key' : [
                                            ''
                                            ]
                                        }, 
                                    mimetype = '', 
                                    mediatype = '', 
                                    size = '', 
                                    preview = edu_sharing_client.models.preview.Preview(
                                        is_icon = True, 
                                        is_generated = True, 
                                        mimetype = '', 
                                        data = 'YQ==', 
                                        url = '', 
                                        width = 56, 
                                        height = 56, ), 
                                    icon_url = '', 
                                    collection = edu_sharing_client.models.collection.Collection(
                                        scope = '', 
                                        author_freetext = '', 
                                        order_ascending = True, 
                                        level0 = True, 
                                        title = '', 
                                        description = '', 
                                        type = '', 
                                        viewtype = '', 
                                        order_mode = '', 
                                        x = 56, 
                                        y = 56, 
                                        z = 56, 
                                        color = '', 
                                        from_user = True, 
                                        pinned = True, 
                                        child_collections_count = 56, 
                                        child_references_count = 56, ), 
                                    owner = , 
                                    is_public = True, )
                                ], 
                            relations = {
                                'key' : 
                                }, 
                            contributors = [
                                edu_sharing_client.models.contributor.Contributor(
                                    property = '', 
                                    firstname = '', 
                                    lastname = '', 
                                    email = '', 
                                    vcard = '', 
                                    org = '', )
                                ], 
                            ref = , 
                            parent = , 
                            type = '', 
                            aspects = [
                                ''
                                ], 
                            name = '', 
                            title = '', 
                            metadataset = '', 
                            repository_type = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            created_by = , 
                            modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            modified_by = , 
                            access = [
                                ''
                                ], 
                            download_url = '', 
                            properties = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            mimetype = '', 
                            mediatype = '', 
                            size = '', 
                            preview = edu_sharing_client.models.preview.Preview(
                                is_icon = True, 
                                is_generated = True, 
                                mimetype = '', 
                                data = 'YQ==', 
                                url = '', 
                                width = 56, 
                                height = 56, ), 
                            icon_url = '', 
                            collection = edu_sharing_client.models.collection.Collection(
                                scope = '', 
                                author_freetext = '', 
                                order_ascending = True, 
                                level0 = True, 
                                title = '', 
                                description = '', 
                                type = '', 
                                viewtype = '', 
                                order_mode = '', 
                                x = 56, 
                                y = 56, 
                                z = 56, 
                                color = '', 
                                from_user = True, 
                                pinned = True, 
                                child_collections_count = 56, 
                                child_references_count = 56, ), 
                            owner = , 
                            is_public = True, ), 
                        creator = edu_sharing_client.models.user.User(
                            editable = True, 
                            status = edu_sharing_client.models.user_status.UserStatus(
                                date = 56, ), 
                            organizations = [
                                edu_sharing_client.models.organization.Organization(
                                    editable = True, 
                                    signup_method = 'simple', 
                                    authority_name = '', 
                                    authority_type = 'USER', 
                                    group_name = '', 
                                    administration_access = True, 
                                    shared_folder = , )
                                ], 
                            quota = edu_sharing_client.models.user_quota.UserQuota(
                                enabled = True, 
                                size_current = 56, 
                                size_quota = 56, ), 
                            authority_name = '', 
                            authority_type = 'USER', 
                            user_name = '', 
                            home_folder = , 
                            shared_folders = [
                                
                                ], ), 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = 'isPartOf', )
                    ]
            )
        else:
            return NodeRelation(
        )
        """

    def testNodeRelation(self):
        """Test NodeRelation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
