# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from edu_sharing_client.models.person_report import PersonReport

class TestPersonReport(unittest.TestCase):
    """PersonReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PersonReport:
        """Test PersonReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PersonReport`
        """
        model = PersonReport()
        if include_optional:
            return PersonReport(
                options = edu_sharing_client.models.person_delete_options.PersonDeleteOptions(
                    cleanup_metadata = True, 
                    home_folder = edu_sharing_client.models.home_folder_options.HomeFolderOptions(
                        folders = 'none', 
                        private_files = 'none', 
                        cc_files = 'none', 
                        keep_folder_structure = True, ), 
                    shared_folders = edu_sharing_client.models.shared_folder_options.SharedFolderOptions(
                        folders = 'none', 
                        private_files = 'none', 
                        cc_files = 'none', 
                        move = True, ), 
                    collections = edu_sharing_client.models.collection_options.CollectionOptions(
                        private_collections = 'none', 
                        public_collections = 'none', ), 
                    ratings = edu_sharing_client.models.delete_option.DeleteOption(
                        delete = True, ), 
                    comments = edu_sharing_client.models.delete_option.DeleteOption(
                        delete = True, ), 
                    collection_feedback = , 
                    statistics = , 
                    stream = , 
                    receiver = '', 
                    receiver_group = '', ),
                results = [
                    edu_sharing_client.models.person_delete_result.PersonDeleteResult(
                        authority_name = '', 
                        deleted_name = '', 
                        home_folder = {
                            'key' : edu_sharing_client.models.counts.Counts(
                                elements = [
                                    edu_sharing_client.models.element.Element(
                                        id = '', 
                                        name = '', 
                                        type = '', )
                                    ], )
                            }, 
                        shared_folders = {
                            'key' : edu_sharing_client.models.counts.Counts()
                            }, 
                        collections = edu_sharing_client.models.collection_counts.CollectionCounts(
                            refs = [
                                edu_sharing_client.models.element.Element(
                                    id = '', 
                                    name = '', 
                                    type = '', )
                                ], ), 
                        comments = 56, 
                        ratings = 56, 
                        collection_feedback = 56, 
                        stream = 56, )
                    ]
            )
        else:
            return PersonReport(
        )
        """

    def testPersonReport(self):
        """Test PersonReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
