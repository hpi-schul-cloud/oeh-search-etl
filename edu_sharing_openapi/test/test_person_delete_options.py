# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from edu_sharing_client.models.person_delete_options import PersonDeleteOptions

class TestPersonDeleteOptions(unittest.TestCase):
    """PersonDeleteOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PersonDeleteOptions:
        """Test PersonDeleteOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PersonDeleteOptions`
        """
        model = PersonDeleteOptions()
        if include_optional:
            return PersonDeleteOptions(
                cleanup_metadata = True,
                home_folder = edu_sharing_client.models.home_folder_options.HomeFolderOptions(
                    folders = 'none', 
                    private_files = 'none', 
                    cc_files = 'none', 
                    keep_folder_structure = True, ),
                shared_folders = edu_sharing_client.models.shared_folder_options.SharedFolderOptions(
                    folders = 'none', 
                    private_files = 'none', 
                    cc_files = 'none', 
                    move = True, ),
                collections = edu_sharing_client.models.collection_options.CollectionOptions(
                    private_collections = 'none', 
                    public_collections = 'none', ),
                ratings = edu_sharing_client.models.delete_option.DeleteOption(
                    delete = True, ),
                comments = edu_sharing_client.models.delete_option.DeleteOption(
                    delete = True, ),
                collection_feedback = edu_sharing_client.models.delete_option.DeleteOption(
                    delete = True, ),
                statistics = edu_sharing_client.models.delete_option.DeleteOption(
                    delete = True, ),
                stream = edu_sharing_client.models.delete_option.DeleteOption(
                    delete = True, ),
                receiver = '',
                receiver_group = ''
            )
        else:
            return PersonDeleteOptions(
        )
        """

    def testPersonDeleteOptions(self):
        """Test PersonDeleteOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
