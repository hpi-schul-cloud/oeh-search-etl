# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from edu_sharing_client.models.notification_response_page import NotificationResponsePage

class TestNotificationResponsePage(unittest.TestCase):
    """NotificationResponsePage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotificationResponsePage:
        """Test NotificationResponsePage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotificationResponsePage`
        """
        model = NotificationResponsePage()
        if include_optional:
            return NotificationResponsePage(
                content = [
                    edu_sharing_client.models.notification_event_dto.NotificationEventDTO(
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        creator = edu_sharing_client.models.user_data_dto.UserDataDTO(
                            id = '', 
                            first_name = '', 
                            last_name = '', 
                            mailbox = '', ), 
                        receiver = edu_sharing_client.models.user_data_dto.UserDataDTO(
                            id = '', 
                            first_name = '', 
                            last_name = '', 
                            mailbox = '', ), 
                        status = 'PENDING', 
                        _id = '', 
                        _class = '', )
                    ],
                pageable = edu_sharing_client.models.pageable.Pageable(
                    page_number = 56, 
                    unpaged = True, 
                    offset = 56, 
                    sort = edu_sharing_client.models.sort.Sort(
                        sorted = True, 
                        empty = True, 
                        unsorted = True, ), 
                    paged = True, 
                    page_size = 56, ),
                total_elements = 56,
                total_pages = 56,
                last = True,
                number_of_elements = 56,
                first = True,
                size = 56,
                number = 56,
                sort = edu_sharing_client.models.sort.Sort(
                    sorted = True, 
                    empty = True, 
                    unsorted = True, ),
                empty = True
            )
        else:
            return NotificationResponsePage(
        )
        """

    def testNotificationResponsePage(self):
        """Test NotificationResponsePage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
