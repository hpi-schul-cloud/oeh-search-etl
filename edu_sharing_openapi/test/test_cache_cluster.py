# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from edu_sharing_client.models.cache_cluster import CacheCluster

class TestCacheCluster(unittest.TestCase):
    """CacheCluster unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CacheCluster:
        """Test CacheCluster
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CacheCluster`
        """
        model = CacheCluster()
        if include_optional:
            return CacheCluster(
                instances = [
                    edu_sharing_client.models.cache_member.CacheMember(
                        name = '', )
                    ],
                cache_infos = [
                    edu_sharing_client.models.cache_info.CacheInfo(
                        size = 56, 
                        statistic_hits = 56, 
                        name = '', 
                        backup_count = 56, 
                        backup_entry_count = 56, 
                        backup_entry_memory_cost = 56, 
                        heap_cost = 56, 
                        owned_entry_count = 56, 
                        get_owned_entry_memory_cost = 56, 
                        size_in_memory = 56, 
                        member = '', 
                        group_name = '', 
                        max_size = 56, )
                    ],
                local_member = '',
                free_memory = 56,
                total_memory = 56,
                max_memory = 56,
                available_processors = 56,
                time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                group_name = ''
            )
        else:
            return CacheCluster(
        )
        """

    def testCacheCluster(self):
        """Test CacheCluster"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
