# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from edu_sharing_client.models.mds import Mds

class TestMds(unittest.TestCase):
    """Mds unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Mds:
        """Test Mds
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Mds`
        """
        model = Mds()
        if include_optional:
            return Mds(
                name = '',
                create = edu_sharing_client.models.create.Create(
                    only_metadata = True, ),
                widgets = [
                    edu_sharing_client.models.mds_widget.MdsWidget(
                        ids = {
                            'key' : ''
                            }, 
                        link = '', 
                        configuration = '', 
                        format = '', 
                        allow_valuespace_suggestions = True, 
                        count_defaultvalue_as_filter = True, 
                        condition = edu_sharing_client.models.mds_widget_condition.MdsWidgetCondition(
                            type = 'PROPERTY', 
                            value = '', 
                            negate = True, 
                            dynamic = True, 
                            pattern = '', ), 
                        maxlength = 56, 
                        interaction_type = 'Input', 
                        filter_mode = 'disabled', 
                        expandable = 'disabled', 
                        subwidgets = [
                            edu_sharing_client.models.mds_subwidget.MdsSubwidget(
                                id = '', )
                            ], 
                        required = 'mandatory', 
                        id = '', 
                        caption = '', 
                        bottom_caption = '', 
                        icon = '', 
                        type = '', 
                        template = '', 
                        has_values = True, 
                        values = [
                            edu_sharing_client.models.mds_value.MdsValue(
                                id = '', 
                                caption = '', 
                                description = '', 
                                parent = '', 
                                url = '', 
                                alternative_ids = [
                                    ''
                                    ], )
                            ], 
                        placeholder = '', 
                        unit = '', 
                        min = 56, 
                        max = 56, 
                        default_min = 56, 
                        default_max = 56, 
                        step = 56, 
                        is_required = 'mandatory', 
                        allowempty = True, 
                        defaultvalue = '', 
                        is_extended = True, 
                        is_searchable = True, 
                        hide_if_empty = True, )
                    ],
                views = [
                    edu_sharing_client.models.mds_view.MdsView(
                        id = '', 
                        caption = '', 
                        icon = '', 
                        html = '', 
                        rel = 'suggestions', 
                        hide_if_empty = True, 
                        is_extended = True, )
                    ],
                groups = [
                    edu_sharing_client.models.mds_group.MdsGroup(
                        rendering = 'legacy', 
                        id = '', 
                        views = [
                            ''
                            ], )
                    ],
                lists = [
                    edu_sharing_client.models.mds_list.MdsList(
                        id = '', 
                        columns = [
                            edu_sharing_client.models.mds_column.MdsColumn(
                                id = '', 
                                format = '', 
                                show_default = True, )
                            ], )
                    ],
                sorts = [
                    edu_sharing_client.models.mds_sort.MdsSort(
                        id = '', 
                        columns = [
                            edu_sharing_client.models.mds_sort_column.MdsSortColumn(
                                id = '', 
                                mode = '', )
                            ], 
                        default = edu_sharing_client.models.mds_sort_default.MdsSortDefault(
                            sort_by = '', 
                            sort_ascending = True, ), )
                    ]
            )
        else:
            return Mds(
                name = '',
                widgets = [
                    edu_sharing_client.models.mds_widget.MdsWidget(
                        ids = {
                            'key' : ''
                            }, 
                        link = '', 
                        configuration = '', 
                        format = '', 
                        allow_valuespace_suggestions = True, 
                        count_defaultvalue_as_filter = True, 
                        condition = edu_sharing_client.models.mds_widget_condition.MdsWidgetCondition(
                            type = 'PROPERTY', 
                            value = '', 
                            negate = True, 
                            dynamic = True, 
                            pattern = '', ), 
                        maxlength = 56, 
                        interaction_type = 'Input', 
                        filter_mode = 'disabled', 
                        expandable = 'disabled', 
                        subwidgets = [
                            edu_sharing_client.models.mds_subwidget.MdsSubwidget(
                                id = '', )
                            ], 
                        required = 'mandatory', 
                        id = '', 
                        caption = '', 
                        bottom_caption = '', 
                        icon = '', 
                        type = '', 
                        template = '', 
                        has_values = True, 
                        values = [
                            edu_sharing_client.models.mds_value.MdsValue(
                                id = '', 
                                caption = '', 
                                description = '', 
                                parent = '', 
                                url = '', 
                                alternative_ids = [
                                    ''
                                    ], )
                            ], 
                        placeholder = '', 
                        unit = '', 
                        min = 56, 
                        max = 56, 
                        default_min = 56, 
                        default_max = 56, 
                        step = 56, 
                        is_required = 'mandatory', 
                        allowempty = True, 
                        defaultvalue = '', 
                        is_extended = True, 
                        is_searchable = True, 
                        hide_if_empty = True, )
                    ],
                views = [
                    edu_sharing_client.models.mds_view.MdsView(
                        id = '', 
                        caption = '', 
                        icon = '', 
                        html = '', 
                        rel = 'suggestions', 
                        hide_if_empty = True, 
                        is_extended = True, )
                    ],
                groups = [
                    edu_sharing_client.models.mds_group.MdsGroup(
                        rendering = 'legacy', 
                        id = '', 
                        views = [
                            ''
                            ], )
                    ],
                lists = [
                    edu_sharing_client.models.mds_list.MdsList(
                        id = '', 
                        columns = [
                            edu_sharing_client.models.mds_column.MdsColumn(
                                id = '', 
                                format = '', 
                                show_default = True, )
                            ], )
                    ],
                sorts = [
                    edu_sharing_client.models.mds_sort.MdsSort(
                        id = '', 
                        columns = [
                            edu_sharing_client.models.mds_sort_column.MdsSortColumn(
                                id = '', 
                                mode = '', )
                            ], 
                        default = edu_sharing_client.models.mds_sort_default.MdsSortDefault(
                            sort_by = '', 
                            sort_ascending = True, ), )
                    ],
        )
        """

    def testMds(self):
        """Test Mds"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
