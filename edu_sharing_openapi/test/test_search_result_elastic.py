# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from edu_sharing_client.models.search_result_elastic import SearchResultElastic

class TestSearchResultElastic(unittest.TestCase):
    """SearchResultElastic unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchResultElastic:
        """Test SearchResultElastic
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchResultElastic`
        """
        model = SearchResultElastic()
        if include_optional:
            return SearchResultElastic(
                suggests = [
                    edu_sharing_client.models.suggest.Suggest(
                        text = '', 
                        highlighted = '', 
                        score = 1.337, )
                    ],
                elastic_response = '',
                nodes = [
                    None
                    ],
                pagination = edu_sharing_client.models.pagination.Pagination(
                    total = 56, 
                    from = 56, 
                    count = 56, ),
                facets = [
                    edu_sharing_client.models.facet.Facet(
                        property = '', 
                        values = [
                            edu_sharing_client.models.value.Value(
                                value = '', 
                                count = 56, )
                            ], 
                        sum_other_doc_count = 56, )
                    ],
                ignored = [
                    ''
                    ]
            )
        else:
            return SearchResultElastic(
                nodes = [
                    None
                    ],
                pagination = edu_sharing_client.models.pagination.Pagination(
                    total = 56, 
                    from = 56, 
                    count = 56, ),
                facets = [
                    edu_sharing_client.models.facet.Facet(
                        property = '', 
                        values = [
                            edu_sharing_client.models.value.Value(
                                value = '', 
                                count = 56, )
                            ], 
                        sum_other_doc_count = 56, )
                    ],
        )
        """

    def testSearchResultElastic(self):
        """Test SearchResultElastic"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
