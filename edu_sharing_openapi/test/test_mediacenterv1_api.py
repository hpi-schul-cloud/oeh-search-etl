# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from edu_sharing_client.api.mediacenterv1_api import MEDIACENTERV1Api


class TestMEDIACENTERV1Api(unittest.TestCase):
    """MEDIACENTERV1Api unit test stubs"""

    def setUp(self) -> None:
        self.api = MEDIACENTERV1Api()

    def tearDown(self) -> None:
        pass

    def test_add_mediacenter_group(self) -> None:
        """Test case for add_mediacenter_group

        add a group that is managed by the given mediacenter
        """
        pass

    def test_create_mediacenter(self) -> None:
        """Test case for create_mediacenter

        create new mediacenter in repository.
        """
        pass

    def test_delete_mediacenter(self) -> None:
        """Test case for delete_mediacenter

        delete a mediacenter group and it's admin group and proxy group
        """
        pass

    def test_edit_mediacenter(self) -> None:
        """Test case for edit_mediacenter

        edit a mediacenter in repository.
        """
        pass

    def test_export_mediacenter_licensed_nodes(self) -> None:
        """Test case for export_mediacenter_licensed_nodes

        get nodes that are licensed by the given mediacenter
        """
        pass

    def test_get_mediacenter_groups(self) -> None:
        """Test case for get_mediacenter_groups

        get groups that are managed by the given mediacenter
        """
        pass

    def test_get_mediacenter_licensed_nodes(self) -> None:
        """Test case for get_mediacenter_licensed_nodes

        get nodes that are licensed by the given mediacenter
        """
        pass

    def test_get_mediacenters(self) -> None:
        """Test case for get_mediacenters

        get mediacenters in the repository.
        """
        pass

    def test_import_mc_org_connections(self) -> None:
        """Test case for import_mc_org_connections

        Import Mediacenter Organisation Connection
        """
        pass

    def test_import_mediacenters(self) -> None:
        """Test case for import_mediacenters

        Import mediacenters
        """
        pass

    def test_import_organisations(self) -> None:
        """Test case for import_organisations

        Import Organisations
        """
        pass

    def test_remove_mediacenter_group(self) -> None:
        """Test case for remove_mediacenter_group

        delete a group that is managed by the given mediacenter
        """
        pass


if __name__ == '__main__':
    unittest.main()
