# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from edu_sharing_client.models.organization import Organization

class TestOrganization(unittest.TestCase):
    """Organization unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Organization:
        """Test Organization
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Organization`
        """
        model = Organization()
        if include_optional:
            return Organization(
                properties = {
                    'key' : [
                        ''
                        ]
                    },
                editable = True,
                signup_method = 'simple',
                ref = edu_sharing_client.models.node_ref.NodeRef(
                    repo = '', 
                    id = '', 
                    archived = True, 
                    is_home_repo = True, ),
                aspects = [
                    ''
                    ],
                authority_name = '',
                authority_type = 'USER',
                group_name = '',
                profile = edu_sharing_client.models.group_profile.GroupProfile(
                    group_email = '', 
                    display_name = '', 
                    group_type = '', 
                    scope_type = '', ),
                administration_access = True,
                shared_folder = edu_sharing_client.models.node_ref.NodeRef(
                    repo = '', 
                    id = '', 
                    archived = True, 
                    is_home_repo = True, )
            )
        else:
            return Organization(
                authority_name = '',
        )
        """

    def testOrganization(self):
        """Test Organization"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
